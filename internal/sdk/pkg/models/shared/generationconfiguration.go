// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GenerationConfigurationRepoSetup string

const (
	GenerationConfigurationRepoSetupProvided GenerationConfigurationRepoSetup = "provided"
	GenerationConfigurationRepoSetupManaged  GenerationConfigurationRepoSetup = "managed"
)

func (e GenerationConfigurationRepoSetup) ToPointer() *GenerationConfigurationRepoSetup {
	return &e
}

func (e *GenerationConfigurationRepoSetup) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "provided":
		fallthrough
	case "managed":
		*e = GenerationConfigurationRepoSetup(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GenerationConfigurationRepoSetup: %v", v)
	}
}

type GenerationConfiguration struct {
	APIID       *string                           `json:"api_id,omitempty"`
	IsMonorepo  *bool                             `json:"is_monorepo,omitempty"`
	RepoSetup   *GenerationConfigurationRepoSetup `json:"repo_setup,omitempty"`
	RepoURL     *string                           `json:"repo_url,omitempty"`
	SchemaAuth  *string                           `json:"schema_auth,omitempty"`
	SchemaURL   *string                           `json:"schema_url,omitempty"`
	VersionID   *string                           `json:"version_id,omitempty"`
	WorkspaceID *string                           `json:"workspace_id,omitempty"`
}
