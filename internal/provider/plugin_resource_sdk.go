// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"speakeasy/internal/sdk/pkg/models/shared"
	"time"
)

func (r *PluginResourceModel) ToCreateSDKType() *shared.Plugin {
	code := r.Code.ValueString()
	createdAt := new(time.Time)
	if !r.CreatedAt.IsUnknown() && !r.CreatedAt.IsNull() {
		*createdAt, _ = time.Parse(time.RFC3339Nano, r.CreatedAt.ValueString())
	} else {
		createdAt = nil
	}
	evalHash := new(string)
	if !r.EvalHash.IsUnknown() && !r.EvalHash.IsNull() {
		*evalHash = r.EvalHash.ValueString()
	} else {
		evalHash = nil
	}
	pluginID := r.PluginID.ValueString()
	title := r.Title.ValueString()
	updatedAt := new(time.Time)
	if !r.UpdatedAt.IsUnknown() && !r.UpdatedAt.IsNull() {
		*updatedAt, _ = time.Parse(time.RFC3339Nano, r.UpdatedAt.ValueString())
	} else {
		updatedAt = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.Plugin{
		Code:        code,
		CreatedAt:   createdAt,
		EvalHash:    evalHash,
		PluginID:    pluginID,
		Title:       title,
		UpdatedAt:   updatedAt,
		WorkspaceID: workspaceID,
	}
	return &out
}

func (r *PluginResourceModel) ToUpdateSDKType() *shared.Plugin {
	out := r.ToCreateSDKType()
	return out
}

func (r *PluginResourceModel) ToDeleteSDKType() *shared.Plugin {
	out := r.ToCreateSDKType()
	return out
}

func (r *PluginResourceModel) RefreshFromCreateResponse(resp *shared.Plugin) {
	r.Code = types.StringValue(resp.Code)
	if resp.CreatedAt != nil {
		r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339))
	} else {
		r.CreatedAt = types.StringNull()
	}
	if resp.EvalHash != nil {
		r.EvalHash = types.StringValue(*resp.EvalHash)
	} else {
		r.EvalHash = types.StringNull()
	}
	r.PluginID = types.StringValue(resp.PluginID)
	r.Title = types.StringValue(resp.Title)
	if resp.UpdatedAt != nil {
		r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339))
	} else {
		r.UpdatedAt = types.StringNull()
	}
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}

func (r *PluginResourceModel) RefreshFromUpdateResponse(resp *shared.Plugin) {
	r.RefreshFromCreateResponse(resp)
}
